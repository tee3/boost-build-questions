$ b2 --debug-generators -a
     *** construct LIB
         from { libhello.c.C }
         properties: <asynch-exceptions>off <closure>off <debug-symbols>on <doxygen.doxproc.index>no <doxygen.processor>xsltproc <embind>off <exception-handling>on <extern-c-nothrow>off <format>html <hardcode-dll-paths>true <host-os>darwin <include>XXX <inlining>off <install-dependencies>off <link-optimization>off <link>shared <main-target-type>LIB <optimization>off <os>MACOSX <pch>on <profiling>off <rtti>on <runtime-debugging>on <runtime-link>shared <stdlib>native <strip>off <suppress-import-lib>false <symlink-location>project-relative <target-os>darwin <threadapi>pthread <threading>single <toolset-clang:platform>darwin <toolset-clang:version>10.0 <toolset>clang <user-interface>console <variant>debug <vectorize>off <warnings-as-errors>off <warnings>on
     find-viable-generators target-type= LIB property-set=
     trying type LIB
     there are generators for this type
     trying generator builtin.prebuilt ( -> LIB )
     trying generator builtin.lib-generator ( -> LIB )
       is viable
     trying generator unix.prebuilt ( -> LIB )
     trying generator gcc.prebuilt ( -> LIB )
     trying generator clang-darwin.prebuilt ( -> LIB )
     trying generator darwin.prebuilt ( -> LIB )
     trying generator emscripten.prebuilt ( -> LIB )
     ***  1  viable generators
         *** construct SHARED_LIB
             from { libhello.c.C }
             properties: <asynch-exceptions>off <closure>off <debug-symbols>on <doxygen.doxproc.index>no <doxygen.processor>xsltproc <embind>off <exception-handling>on <extern-c-nothrow>off <format>html <hardcode-dll-paths>true <host-os>darwin <include>XXX <inlining>off <install-dependencies>off <link-optimization>off <link>shared <main-target-type>LIB <optimization>off <os>MACOSX <pch>on <profiling>off <relevant>link <rtti>on <runtime-debugging>on <runtime-link>shared <stdlib>native <strip>off <suppress-import-lib>false <symlink-location>project-relative <target-os>darwin <threadapi>pthread <threading>single <toolset-clang:platform>darwin <toolset-clang:version>10.0 <toolset>clang <user-interface>console <variant>debug <vectorize>off <warnings-as-errors>off <warnings>on
         find-viable-generators target-type= SHARED_LIB property-set=
         trying type SHARED_LIB
         there are generators for this type
         trying generator unix.link.dll ( LIB OBJ -> SHARED_LIB )
         trying generator gcc.mingw.link.dll ( OBJ SEARCHED_LIB STATIC_LIB IMPORT_LIB -> IMPORT_LIB SHARED_LIB )
         trying generator gcc.link.dll ( LIB OBJ -> SHARED_LIB )
         trying generator gcc.cygwin.link.dll ( OBJ SEARCHED_LIB STATIC_LIB IMPORT_LIB -> IMPORT_LIB SHARED_LIB )
         trying generator clang-darwin.link.dll ( LIB OBJ -> SHARED_LIB )
           is viable
         trying generator clang-darwin.cygwin.link.dll ( OBJ SEARCHED_LIB STATIC_LIB IMPORT_LIB -> IMPORT_LIB SHARED_LIB )
         trying generator darwin.link.dll ( LIB OBJ -> SHARED_LIB )
         trying generator darwin.cygwin.link.dll ( OBJ SEARCHED_LIB STATIC_LIB IMPORT_LIB -> IMPORT_LIB SHARED_LIB )
         trying generator emscripten.link.dll ( LIB OBJ -> SHARED_LIB )
         trying generator emscripten.cygwin.link.dll ( OBJ SEARCHED_LIB STATIC_LIB IMPORT_LIB -> IMPORT_LIB SHARED_LIB )
         ***  1  viable generators
           ** generator clang-darwin.link.dll
           composing: true
             *** construct LIB
                 from { libhello.c.C }
                 properties: <asynch-exceptions>off <closure>off <debug-symbols>on <doxygen.doxproc.index>no <doxygen.processor>xsltproc <embind>off <exception-handling>on <extern-c-nothrow>off <format>html <hardcode-dll-paths>true <host-os>darwin <include>XXX <inlining>off <install-dependencies>off <link-optimization>off <link>shared <main-target-type>LIB <optimization>off <os>MACOSX <pch>on <profiling>off <relevant>link <rtti>on <runtime-debugging>on <runtime-link>shared <stdlib>native <strip>off <suppress-import-lib>false <symlink-location>project-relative <target-os>darwin <threadapi>pthread <threading>single <toolset-clang:platform>darwin <toolset-clang:version>10.0 <toolset>clang <user-interface>console <variant>debug <vectorize>off <warnings-as-errors>off <warnings>on
             find-viable-generators target-type= LIB property-set=
             trying type LIB
             there are generators for this type
             trying generator builtin.prebuilt ( -> LIB )
             trying generator builtin.lib-generator ( -> LIB )
               is viable
             trying generator unix.prebuilt ( -> LIB )
             trying generator gcc.prebuilt ( -> LIB )
             trying generator clang-darwin.prebuilt ( -> LIB )
             trying generator darwin.prebuilt ( -> LIB )
             trying generator emscripten.prebuilt ( -> LIB )
                generator  builtin.lib-generator is active, discaring
             ***  0  viable generators
             *** construct OBJ
                 from { libhello.c.C }
                 properties: <asynch-exceptions>off <closure>off <debug-symbols>on <doxygen.doxproc.index>no <doxygen.processor>xsltproc <embind>off <exception-handling>on <extern-c-nothrow>off <format>html <hardcode-dll-paths>true <host-os>darwin <include>XXX <inlining>off <install-dependencies>off <link-optimization>off <link>shared <main-target-type>LIB <optimization>off <os>MACOSX <pch>on <profiling>off <relevant>link <rtti>on <runtime-debugging>on <runtime-link>shared <stdlib>native <strip>off <suppress-import-lib>false <symlink-location>project-relative <target-os>darwin <threadapi>pthread <threading>single <toolset-clang:platform>darwin <toolset-clang:version>10.0 <toolset>clang <user-interface>console <variant>debug <vectorize>off <warnings-as-errors>off <warnings>on
             find-viable-generators target-type= OBJ property-set=
             trying type OBJ
             there are generators for this type
             trying generator rc.compile.resource ( RC -> OBJ )
               is viable
             trying generator gcc.compile.c++ ( CPP -> OBJ )
             trying generator gcc.compile.c ( C -> OBJ )
             trying generator gcc.compile.asm ( ASM -> OBJ )
             trying generator gcc.compile.fortran ( FORTRAN FORTRAN90 -> OBJ )
             trying generator clang-darwin.compile.c++ ( CPP -> OBJ )
               is viable
             trying generator clang-darwin.compile.c ( C -> OBJ )
               is viable
             trying generator clang-darwin.compile.asm ( ASM -> OBJ )
               is viable
             trying generator clang-darwin.compile.fortran ( FORTRAN FORTRAN90 -> OBJ )
               is viable
             trying generator clang-darwin.compile.m ( OBJECTIVE_C -> OBJ )
               is viable
             trying generator clang-darwin.compile.mm ( OBJECTIVE_CPP -> OBJ )
               is viable
             trying generator darwin.compile.c++ ( CPP -> OBJ )
             trying generator darwin.compile.c ( C -> OBJ )
             trying generator darwin.compile.asm ( ASM -> OBJ )
             trying generator darwin.compile.fortran ( FORTRAN FORTRAN90 -> OBJ )
             trying generator darwin.compile.m ( OBJECTIVE_C -> OBJ )
             trying generator darwin.compile.mm ( OBJECTIVE_CPP -> OBJ )
             trying generator emscripten.compile.c++ ( CPP -> OBJ )
             trying generator emscripten.compile.c ( C -> OBJ )
             trying generator emscripten.compile.asm ( ASM -> OBJ )
             trying generator emscripten.compile.fortran ( FORTRAN FORTRAN90 -> OBJ )
             ***  7  viable generators
               ** generator 'rc.compile.resource' pruned
               ** generator 'clang-darwin.compile.c++' pruned
               ** generator clang-darwin.compile.c
               composing:
               SUCCESS:  [ <relevant>address-model <relevant>architecture <relevant>cflags <relevant>debug-symbols <relevant>define <relevant>flags <relevant>include <relevant>inlining <relevant>instruction-set <relevant>link <relevant>local-visibility <relevant>optimization <relevant>pch <relevant>pch-file <relevant>profiling <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>warnings <relevant>warnings-as-errors ] { clang-darwin%clang-darwin.compile.c-libhello.o.OBJ { libhello.c.C } }

             returned [ <relevant>address-model <relevant>architecture <relevant>cflags <relevant>debug-symbols <relevant>define <relevant>flags <relevant>include <relevant>inlining <relevant>instruction-set <relevant>link <relevant>local-visibility <relevant>optimization <relevant>pch <relevant>pch-file <relevant>profiling <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>warnings <relevant>warnings-as-errors ] { clang-darwin%clang-darwin.compile.c-libhello.o.OBJ { libhello.c.C } }
               generator clang-darwin.compile.c  spawned 
               { clang-darwin%clang-darwin.compile.c-libhello.o.OBJ { libhello.c.C } }
               with usage requirements: [ <relevant>address-model <relevant>architecture <relevant>cflags <relevant>debug-symbols <relevant>define <relevant>flags <relevant>include <relevant>inlining <relevant>instruction-set <relevant>link <relevant>local-visibility <relevant>optimization <relevant>pch <relevant>pch-file <relevant>profiling <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>warnings <relevant>warnings-as-errors ]
               ** generator 'clang-darwin.compile.asm' pruned
               ** generator 'clang-darwin.compile.fortran' pruned
               ** generator 'clang-darwin.compile.m' pruned
               ** generator 'clang-darwin.compile.mm' pruned
           SUCCESS:  [ <relevant>address-model <relevant>architecture <relevant>cxxstd <relevant>cxxstd-dialect <relevant>debug-symbols <relevant>dll-path <relevant>find-shared-library <relevant>find-static-library <relevant>instruction-set <relevant>library-file <relevant>library-path <relevant>link <relevant>linkflags <relevant>local-visibility <relevant>profiling <relevant>runtime-link <relevant>strip <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>xdll-path ] { clang-darwin%clang-darwin.link.dll-libhello.dylib.SHARED_LIB { clang-darwin%clang-darwin.compile.c-libhello.o.OBJ { libhello.c.C } } }

         returned [ <relevant>address-model <relevant>architecture <relevant>cflags <relevant>cxxstd <relevant>cxxstd-dialect <relevant>debug-symbols <relevant>define <relevant>dll-path <relevant>find-shared-library <relevant>find-static-library <relevant>flags <relevant>include <relevant>inlining <relevant>instruction-set <relevant>library-file <relevant>library-path <relevant>link <relevant>linkflags <relevant>local-visibility <relevant>optimization <relevant>pch <relevant>pch-file <relevant>profiling <relevant>runtime-link <relevant>strip <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>warnings <relevant>warnings-as-errors <relevant>xdll-path <xdll-path>/private/tmp/tmp/bin/clang-darwin-10.0/debug ] { clang-darwin%clang-darwin.link.dll-libhello.dylib.SHARED_LIB { clang-darwin%clang-darwin.compile.c-libhello.o.OBJ { libhello.c.C } } }
           generator clang-darwin.link.dll  spawned 
           { clang-darwin%clang-darwin.link.dll-libhello.dylib.SHARED_LIB { clang-darwin%clang-darwin.compile.c-libhello.o.OBJ { libhello.c.C } } }
           with usage requirements: [ <relevant>address-model <relevant>architecture <relevant>cflags <relevant>cxxstd <relevant>cxxstd-dialect <relevant>debug-symbols <relevant>define <relevant>dll-path <relevant>find-shared-library <relevant>find-static-library <relevant>flags <relevant>include <relevant>inlining <relevant>instruction-set <relevant>library-file <relevant>library-path <relevant>link <relevant>linkflags <relevant>local-visibility <relevant>optimization <relevant>pch <relevant>pch-file <relevant>profiling <relevant>runtime-link <relevant>strip <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>warnings <relevant>warnings-as-errors <relevant>xdll-path <xdll-path>/private/tmp/tmp/bin/clang-darwin-10.0/debug ]
     returned [ <relevant>address-model <relevant>architecture <relevant>cflags <relevant>cxxstd <relevant>cxxstd-dialect <relevant>debug-symbols <relevant>define <relevant>dll-path <relevant>find-shared-library <relevant>find-static-library <relevant>flags <relevant>include <relevant>inlining <relevant>instruction-set <relevant>library-file <relevant>library-path <relevant>link <relevant>linkflags <relevant>local-visibility <relevant>optimization <relevant>pch <relevant>pch-file <relevant>profiling <relevant>runtime-link <relevant>strip <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>warnings <relevant>warnings-as-errors <relevant>xdll-path <xdll-path>/private/tmp/tmp/bin/clang-darwin-10.0/debug ] { clang-darwin%clang-darwin.link.dll-libhello.dylib.SHARED_LIB { clang-darwin%clang-darwin.compile.c-libhello.o.OBJ { libhello.c.C } } }
       generator builtin.lib-generator  spawned 
       { clang-darwin%clang-darwin.link.dll-libhello.dylib.SHARED_LIB { clang-darwin%clang-darwin.compile.c-libhello.o.OBJ { libhello.c.C } } }
       with usage requirements: [ <relevant>address-model <relevant>architecture <relevant>cflags <relevant>cxxstd <relevant>cxxstd-dialect <relevant>debug-symbols <relevant>define <relevant>dll-path <relevant>find-shared-library <relevant>find-static-library <relevant>flags <relevant>include <relevant>inlining <relevant>instruction-set <relevant>library-file <relevant>library-path <relevant>link <relevant>linkflags <relevant>local-visibility <relevant>optimization <relevant>pch <relevant>pch-file <relevant>profiling <relevant>runtime-link <relevant>strip <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>warnings <relevant>warnings-as-errors <relevant>xdll-path <xdll-path>/private/tmp/tmp/bin/clang-darwin-10.0/debug ]
     *** construct LIB
         from { libhello.c.C }
         properties: <asynch-exceptions>off <closure>off <debug-symbols>on <doxygen.doxproc.index>no <doxygen.processor>xsltproc <embind>off <exception-handling>on <extern-c-nothrow>off <format>html <hardcode-dll-paths>true <host-os>darwin <include>XXX <inlining>off <install-dependencies>off <link-optimization>off <link>shared <main-target-type>LIB <optimization>off <os>MACOSX <pch>on <profiling>off <rtti>on <runtime-debugging>on <runtime-link>shared <stdlib>native <strip>off <suppress-import-lib>false <symlink-location>project-relative <target-os>darwin <threadapi>pthread <threading>single <toolset-clang:platform>darwin <toolset-clang:version>10.0 <toolset>clang <user-interface>console <variant>debug <vectorize>off <warnings-as-errors>off <warnings>on
     ***  1  viable generators
         *** construct SHARED_LIB
             from { libhello.c.C }
             properties: <asynch-exceptions>off <closure>off <debug-symbols>on <doxygen.doxproc.index>no <doxygen.processor>xsltproc <embind>off <exception-handling>on <extern-c-nothrow>off <format>html <hardcode-dll-paths>true <host-os>darwin <include>XXX <inlining>off <install-dependencies>off <link-optimization>off <link>shared <main-target-type>LIB <optimization>off <os>MACOSX <pch>on <profiling>off <relevant>link <rtti>on <runtime-debugging>on <runtime-link>shared <stdlib>native <strip>off <suppress-import-lib>false <symlink-location>project-relative <target-os>darwin <threadapi>pthread <threading>single <toolset-clang:platform>darwin <toolset-clang:version>10.0 <toolset>clang <user-interface>console <variant>debug <vectorize>off <warnings-as-errors>off <warnings>on
         ***  1  viable generators
           ** generator clang-darwin.link.dll
           composing: true
             *** construct LIB
                 from { libhello.c.C }
                 properties: <asynch-exceptions>off <closure>off <debug-symbols>on <doxygen.doxproc.index>no <doxygen.processor>xsltproc <embind>off <exception-handling>on <extern-c-nothrow>off <format>html <hardcode-dll-paths>true <host-os>darwin <include>XXX <inlining>off <install-dependencies>off <link-optimization>off <link>shared <main-target-type>LIB <optimization>off <os>MACOSX <pch>on <profiling>off <relevant>link <rtti>on <runtime-debugging>on <runtime-link>shared <stdlib>native <strip>off <suppress-import-lib>false <symlink-location>project-relative <target-os>darwin <threadapi>pthread <threading>single <toolset-clang:platform>darwin <toolset-clang:version>10.0 <toolset>clang <user-interface>console <variant>debug <vectorize>off <warnings-as-errors>off <warnings>on
                generator  builtin.lib-generator is active, discaring
             ***  0  viable generators
             *** construct OBJ
                 from { libhello.c.C }
                 properties: <asynch-exceptions>off <closure>off <debug-symbols>on <doxygen.doxproc.index>no <doxygen.processor>xsltproc <embind>off <exception-handling>on <extern-c-nothrow>off <format>html <hardcode-dll-paths>true <host-os>darwin <include>XXX <inlining>off <install-dependencies>off <link-optimization>off <link>shared <main-target-type>LIB <optimization>off <os>MACOSX <pch>on <profiling>off <relevant>link <rtti>on <runtime-debugging>on <runtime-link>shared <stdlib>native <strip>off <suppress-import-lib>false <symlink-location>project-relative <target-os>darwin <threadapi>pthread <threading>single <toolset-clang:platform>darwin <toolset-clang:version>10.0 <toolset>clang <user-interface>console <variant>debug <vectorize>off <warnings-as-errors>off <warnings>on
             ***  7  viable generators
               ** generator 'rc.compile.resource' pruned
               ** generator 'clang-darwin.compile.c++' pruned
               ** generator clang-darwin.compile.c
               composing:
               SUCCESS:  [ <relevant>address-model <relevant>architecture <relevant>cflags <relevant>debug-symbols <relevant>define <relevant>flags <relevant>include <relevant>inlining <relevant>instruction-set <relevant>link <relevant>local-visibility <relevant>optimization <relevant>pch <relevant>pch-file <relevant>profiling <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>warnings <relevant>warnings-as-errors ] { clang-darwin%clang-darwin.compile.c-libhello.o.OBJ { libhello.c.C } }

             returned [ <relevant>address-model <relevant>architecture <relevant>cflags <relevant>debug-symbols <relevant>define <relevant>flags <relevant>include <relevant>inlining <relevant>instruction-set <relevant>link <relevant>local-visibility <relevant>optimization <relevant>pch <relevant>pch-file <relevant>profiling <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>warnings <relevant>warnings-as-errors ] { clang-darwin%clang-darwin.compile.c-libhello.o.OBJ { libhello.c.C } }
               generator clang-darwin.compile.c  spawned 
               { clang-darwin%clang-darwin.compile.c-libhello.o.OBJ { libhello.c.C } }
               with usage requirements: [ <relevant>address-model <relevant>architecture <relevant>cflags <relevant>debug-symbols <relevant>define <relevant>flags <relevant>include <relevant>inlining <relevant>instruction-set <relevant>link <relevant>local-visibility <relevant>optimization <relevant>pch <relevant>pch-file <relevant>profiling <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>warnings <relevant>warnings-as-errors ]
               ** generator 'clang-darwin.compile.asm' pruned
               ** generator 'clang-darwin.compile.fortran' pruned
               ** generator 'clang-darwin.compile.m' pruned
               ** generator 'clang-darwin.compile.mm' pruned
           SUCCESS:  [ <relevant>address-model <relevant>architecture <relevant>cxxstd <relevant>cxxstd-dialect <relevant>debug-symbols <relevant>dll-path <relevant>find-shared-library <relevant>find-static-library <relevant>instruction-set <relevant>library-file <relevant>library-path <relevant>link <relevant>linkflags <relevant>local-visibility <relevant>profiling <relevant>runtime-link <relevant>strip <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>xdll-path ] { clang-darwin%clang-darwin.link.dll-libhello.dylib.SHARED_LIB { clang-darwin%clang-darwin.compile.c-libhello.o.OBJ { libhello.c.C } } }

         returned [ <relevant>address-model <relevant>architecture <relevant>cflags <relevant>cxxstd <relevant>cxxstd-dialect <relevant>debug-symbols <relevant>define <relevant>dll-path <relevant>find-shared-library <relevant>find-static-library <relevant>flags <relevant>include <relevant>inlining <relevant>instruction-set <relevant>library-file <relevant>library-path <relevant>link <relevant>linkflags <relevant>local-visibility <relevant>optimization <relevant>pch <relevant>pch-file <relevant>profiling <relevant>runtime-link <relevant>strip <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>warnings <relevant>warnings-as-errors <relevant>xdll-path <xdll-path>/private/tmp/tmp/bin/clang-darwin-10.0/debug ] { clang-darwin%clang-darwin.link.dll-libhello.dylib.SHARED_LIB { clang-darwin%clang-darwin.compile.c-libhello.o.OBJ { libhello.c.C } } }
           generator clang-darwin.link.dll  spawned 
           { clang-darwin%clang-darwin.link.dll-libhello.dylib.SHARED_LIB { clang-darwin%clang-darwin.compile.c-libhello.o.OBJ { libhello.c.C } } }
           with usage requirements: [ <relevant>address-model <relevant>architecture <relevant>cflags <relevant>cxxstd <relevant>cxxstd-dialect <relevant>debug-symbols <relevant>define <relevant>dll-path <relevant>find-shared-library <relevant>find-static-library <relevant>flags <relevant>include <relevant>inlining <relevant>instruction-set <relevant>library-file <relevant>library-path <relevant>link <relevant>linkflags <relevant>local-visibility <relevant>optimization <relevant>pch <relevant>pch-file <relevant>profiling <relevant>runtime-link <relevant>strip <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>warnings <relevant>warnings-as-errors <relevant>xdll-path <xdll-path>/private/tmp/tmp/bin/clang-darwin-10.0/debug ]
     returned [ <relevant>address-model <relevant>architecture <relevant>cflags <relevant>cxxstd <relevant>cxxstd-dialect <relevant>debug-symbols <relevant>define <relevant>dll-path <relevant>find-shared-library <relevant>find-static-library <relevant>flags <relevant>include <relevant>inlining <relevant>instruction-set <relevant>library-file <relevant>library-path <relevant>link <relevant>linkflags <relevant>local-visibility <relevant>optimization <relevant>pch <relevant>pch-file <relevant>profiling <relevant>runtime-link <relevant>strip <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>warnings <relevant>warnings-as-errors <relevant>xdll-path <xdll-path>/private/tmp/tmp/bin/clang-darwin-10.0/debug ] { clang-darwin%clang-darwin.link.dll-libhello.dylib.SHARED_LIB { clang-darwin%clang-darwin.compile.c-libhello.o.OBJ { libhello.c.C } } }
       generator builtin.lib-generator  spawned 
       { clang-darwin%clang-darwin.link.dll-libhello.dylib.SHARED_LIB { clang-darwin%clang-darwin.compile.c-libhello.o.OBJ { libhello.c.C } } }
       with usage requirements: [ <relevant>address-model <relevant>architecture <relevant>cflags <relevant>cxxstd <relevant>cxxstd-dialect <relevant>debug-symbols <relevant>define <relevant>dll-path <relevant>find-shared-library <relevant>find-static-library <relevant>flags <relevant>include <relevant>inlining <relevant>instruction-set <relevant>library-file <relevant>library-path <relevant>link <relevant>linkflags <relevant>local-visibility <relevant>optimization <relevant>pch <relevant>pch-file <relevant>profiling <relevant>runtime-link <relevant>strip <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>warnings <relevant>warnings-as-errors <relevant>xdll-path <xdll-path>/private/tmp/tmp/bin/clang-darwin-10.0/debug ]
     *** construct EXE
         from { hello.c.C }
         from { clang-darwin%clang-darwin.link.dll-libhello.dylib.SHARED_LIB { clang-darwin%clang-darwin.compile.c-libhello.o.OBJ { libhello.c.C } } }
         properties: <asynch-exceptions>off <closure>off <debug-symbols>on <doxygen.doxproc.index>no <doxygen.processor>xsltproc <embind>off <exception-handling>on <extern-c-nothrow>off <format>html <hardcode-dll-paths>true <host-os>darwin <inlining>off <install-dependencies>off <link-optimization>off <link>shared <main-target-type>EXE <optimization>off <os>MACOSX <pch>on <profiling>off <relevant>address-model <relevant>architecture <relevant>cxxstd <relevant>cxxstd-dialect <relevant>debug-symbols <relevant>inlining <relevant>instruction-set <relevant>link <relevant>optimization <relevant>pch <relevant>profiling <relevant>runtime-link <relevant>strip <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>toolset-darwin:version <relevant>toolset-emscripten:version <relevant>toolset-gcc:version <relevant>variant <relevant>visibility <relevant>warnings <relevant>warnings-as-errors <rtti>on <runtime-debugging>on <runtime-link>shared <stdlib>native <strip>off <suppress-import-lib>false <symlink-location>project-relative <target-os>darwin <threadapi>pthread <threading>single <toolset-clang:platform>darwin <toolset-clang:version>10.0 <toolset>clang <user-interface>console <variant>debug <vectorize>off <warnings-as-errors>off <warnings>on <xdll-path>/private/tmp/tmp/bin/clang-darwin-10.0/debug
     find-viable-generators target-type= EXE property-set= clang-darwin-10.0/debug
     trying type EXE
     there are generators for this type
     trying generator unix.link ( LIB OBJ -> EXE )
     trying generator gcc.mingw.link ( OBJ SEARCHED_LIB STATIC_LIB IMPORT_LIB -> EXE )
     trying generator gcc.link ( LIB OBJ -> EXE )
     trying generator gcc.cygwin.link ( OBJ SEARCHED_LIB STATIC_LIB IMPORT_LIB -> EXE )
     trying generator clang-darwin.link ( LIB OBJ -> EXE )
       is viable
     trying generator clang-darwin.cygwin.link ( OBJ SEARCHED_LIB STATIC_LIB IMPORT_LIB -> EXE )
     trying generator darwin.link ( LIB OBJ -> EXE )
     trying generator darwin.cygwin.link ( OBJ SEARCHED_LIB STATIC_LIB IMPORT_LIB -> EXE )
     trying generator emscripten.link ( LIB OBJ -> EXE )
     trying generator emscripten.cygwin.link ( OBJ SEARCHED_LIB STATIC_LIB IMPORT_LIB -> EXE )
     ***  1  viable generators
       ** generator clang-darwin.link
       composing: true
         *** construct LIB
             from { hello.c.C }
             properties: <asynch-exceptions>off <closure>off <debug-symbols>on <dll-path>/private/tmp/tmp/bin/clang-darwin-10.0/debug <doxygen.doxproc.index>no <doxygen.processor>xsltproc <embind>off <exception-handling>on <extern-c-nothrow>off <format>html <hardcode-dll-paths>true <host-os>darwin <inlining>off <install-dependencies>off <link-optimization>off <link>shared <main-target-type>EXE <optimization>off <os>MACOSX <pch>on <profiling>off <relevant>address-model <relevant>architecture <relevant>cxxstd <relevant>cxxstd-dialect <relevant>debug-symbols <relevant>inlining <relevant>instruction-set <relevant>link <relevant>optimization <relevant>pch <relevant>profiling <relevant>runtime-link <relevant>strip <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>toolset-darwin:version <relevant>toolset-emscripten:version <relevant>toolset-gcc:version <relevant>variant <relevant>visibility <relevant>warnings <relevant>warnings-as-errors <rtti>on <runtime-debugging>on <runtime-link>shared <stdlib>native <strip>off <suppress-import-lib>false <symlink-location>project-relative <target-os>darwin <threadapi>pthread <threading>single <toolset-clang:platform>darwin <toolset-clang:version>10.0 <toolset>clang <user-interface>console <variant>debug <vectorize>off <warnings-as-errors>off <warnings>on <xdll-path>/private/tmp/tmp/bin/clang-darwin-10.0/debug
         find-viable-generators target-type= LIB property-set= clang-darwin-10.0/debug
         trying type LIB
         there are generators for this type
         trying generator builtin.prebuilt ( -> LIB )
         trying generator builtin.lib-generator ( -> LIB )
           is viable
         trying generator unix.prebuilt ( -> LIB )
         trying generator gcc.prebuilt ( -> LIB )
         trying generator clang-darwin.prebuilt ( -> LIB )
         trying generator darwin.prebuilt ( -> LIB )
         trying generator emscripten.prebuilt ( -> LIB )
         ***  1  viable generators
         returned
           generator builtin.lib-generator  spawned 
          
         *** construct OBJ
             from { hello.c.C }
             properties: <asynch-exceptions>off <closure>off <debug-symbols>on <dll-path>/private/tmp/tmp/bin/clang-darwin-10.0/debug <doxygen.doxproc.index>no <doxygen.processor>xsltproc <embind>off <exception-handling>on <extern-c-nothrow>off <format>html <hardcode-dll-paths>true <host-os>darwin <inlining>off <install-dependencies>off <link-optimization>off <link>shared <main-target-type>EXE <optimization>off <os>MACOSX <pch>on <profiling>off <relevant>address-model <relevant>architecture <relevant>cxxstd <relevant>cxxstd-dialect <relevant>debug-symbols <relevant>inlining <relevant>instruction-set <relevant>link <relevant>optimization <relevant>pch <relevant>profiling <relevant>runtime-link <relevant>strip <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>toolset-darwin:version <relevant>toolset-emscripten:version <relevant>toolset-gcc:version <relevant>variant <relevant>visibility <relevant>warnings <relevant>warnings-as-errors <rtti>on <runtime-debugging>on <runtime-link>shared <stdlib>native <strip>off <suppress-import-lib>false <symlink-location>project-relative <target-os>darwin <threadapi>pthread <threading>single <toolset-clang:platform>darwin <toolset-clang:version>10.0 <toolset>clang <user-interface>console <variant>debug <vectorize>off <warnings-as-errors>off <warnings>on <xdll-path>/private/tmp/tmp/bin/clang-darwin-10.0/debug
         find-viable-generators target-type= OBJ property-set= clang-darwin-10.0/debug
         trying type OBJ
         there are generators for this type
         trying generator rc.compile.resource ( RC -> OBJ )
           is viable
         trying generator gcc.compile.c++ ( CPP -> OBJ )
         trying generator gcc.compile.c ( C -> OBJ )
         trying generator gcc.compile.asm ( ASM -> OBJ )
         trying generator gcc.compile.fortran ( FORTRAN FORTRAN90 -> OBJ )
         trying generator clang-darwin.compile.c++ ( CPP -> OBJ )
           is viable
         trying generator clang-darwin.compile.c ( C -> OBJ )
           is viable
         trying generator clang-darwin.compile.asm ( ASM -> OBJ )
           is viable
         trying generator clang-darwin.compile.fortran ( FORTRAN FORTRAN90 -> OBJ )
           is viable
         trying generator clang-darwin.compile.m ( OBJECTIVE_C -> OBJ )
           is viable
         trying generator clang-darwin.compile.mm ( OBJECTIVE_CPP -> OBJ )
           is viable
         trying generator darwin.compile.c++ ( CPP -> OBJ )
         trying generator darwin.compile.c ( C -> OBJ )
         trying generator darwin.compile.asm ( ASM -> OBJ )
         trying generator darwin.compile.fortran ( FORTRAN FORTRAN90 -> OBJ )
         trying generator darwin.compile.m ( OBJECTIVE_C -> OBJ )
         trying generator darwin.compile.mm ( OBJECTIVE_CPP -> OBJ )
         trying generator emscripten.compile.c++ ( CPP -> OBJ )
         trying generator emscripten.compile.c ( C -> OBJ )
         trying generator emscripten.compile.asm ( ASM -> OBJ )
         trying generator emscripten.compile.fortran ( FORTRAN FORTRAN90 -> OBJ )
         ***  7  viable generators
           ** generator 'rc.compile.resource' pruned
           ** generator 'clang-darwin.compile.c++' pruned
           ** generator clang-darwin.compile.c
           composing:
           SUCCESS:  [ <relevant>address-model <relevant>architecture <relevant>cflags <relevant>debug-symbols <relevant>define <relevant>flags <relevant>include <relevant>inlining <relevant>instruction-set <relevant>link <relevant>local-visibility <relevant>optimization <relevant>pch <relevant>pch-file <relevant>profiling <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>warnings <relevant>warnings-as-errors ] { clang-darwin%clang-darwin.compile.c-hello.o.OBJ { hello.c.C } }

         returned [ <relevant>address-model <relevant>architecture <relevant>cflags <relevant>debug-symbols <relevant>define <relevant>flags <relevant>include <relevant>inlining <relevant>instruction-set <relevant>link <relevant>local-visibility <relevant>optimization <relevant>pch <relevant>pch-file <relevant>profiling <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>warnings <relevant>warnings-as-errors ] { clang-darwin%clang-darwin.compile.c-hello.o.OBJ { hello.c.C } }
           generator clang-darwin.compile.c  spawned 
           { clang-darwin%clang-darwin.compile.c-hello.o.OBJ { hello.c.C } }
           with usage requirements: [ <relevant>address-model <relevant>architecture <relevant>cflags <relevant>debug-symbols <relevant>define <relevant>flags <relevant>include <relevant>inlining <relevant>instruction-set <relevant>link <relevant>local-visibility <relevant>optimization <relevant>pch <relevant>pch-file <relevant>profiling <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>warnings <relevant>warnings-as-errors ]
           ** generator 'clang-darwin.compile.asm' pruned
           ** generator 'clang-darwin.compile.fortran' pruned
           ** generator 'clang-darwin.compile.m' pruned
           ** generator 'clang-darwin.compile.mm' pruned
       SUCCESS:  [ <relevant>address-model <relevant>architecture <relevant>cxxstd <relevant>cxxstd-dialect <relevant>debug-symbols <relevant>dll-path <relevant>find-shared-library <relevant>find-static-library <relevant>instruction-set <relevant>library-file <relevant>library-path <relevant>link <relevant>linkflags <relevant>local-visibility <relevant>profiling <relevant>runtime-link <relevant>strip <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>xdll-path ] { clang-darwin%clang-darwin.link-hello.EXE { clang-darwin%clang-darwin.compile.c-hello.o.OBJ { hello.c.C } } { clang-darwin%clang-darwin.link.dll-libhello.dylib.SHARED_LIB { clang-darwin%clang-darwin.compile.c-libhello.o.OBJ { libhello.c.C } } } }

     returned [ <relevant>address-model <relevant>architecture <relevant>cflags <relevant>cxxstd <relevant>cxxstd-dialect <relevant>debug-symbols <relevant>define <relevant>dll-path <relevant>find-shared-library <relevant>find-static-library <relevant>flags <relevant>include <relevant>inlining <relevant>instruction-set <relevant>library-file <relevant>library-path <relevant>link <relevant>linkflags <relevant>local-visibility <relevant>optimization <relevant>pch <relevant>pch-file <relevant>profiling <relevant>runtime-link <relevant>strip <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>warnings <relevant>warnings-as-errors <relevant>xdll-path <xdll-path>/private/tmp/tmp/bin/clang-darwin-10.0/debug ] { clang-darwin%clang-darwin.link-hello.EXE { clang-darwin%clang-darwin.compile.c-hello.o.OBJ { hello.c.C } } { clang-darwin%clang-darwin.link.dll-libhello.dylib.SHARED_LIB { clang-darwin%clang-darwin.compile.c-libhello.o.OBJ { libhello.c.C } } } }
       generator clang-darwin.link  spawned 
       { clang-darwin%clang-darwin.link-hello.EXE { clang-darwin%clang-darwin.compile.c-hello.o.OBJ { hello.c.C } } { clang-darwin%clang-darwin.link.dll-libhello.dylib.SHARED_LIB { clang-darwin%clang-darwin.compile.c-libhello.o.OBJ { libhello.c.C } } } }
       with usage requirements: [ <relevant>address-model <relevant>architecture <relevant>cflags <relevant>cxxstd <relevant>cxxstd-dialect <relevant>debug-symbols <relevant>define <relevant>dll-path <relevant>find-shared-library <relevant>find-static-library <relevant>flags <relevant>include <relevant>inlining <relevant>instruction-set <relevant>library-file <relevant>library-path <relevant>link <relevant>linkflags <relevant>local-visibility <relevant>optimization <relevant>pch <relevant>pch-file <relevant>profiling <relevant>runtime-link <relevant>strip <relevant>target-os <relevant>threading <relevant>toolset <relevant>toolset-clang:platform <relevant>toolset-clang:version <relevant>warnings <relevant>warnings-as-errors <relevant>xdll-path <xdll-path>/private/tmp/tmp/bin/clang-darwin-10.0/debug ]
...found 11 targets...
...updating 7 targets...
clang-darwin.compile.c bin/clang-darwin-10.0/debug/libhello.o
clang-darwin.link.dll bin/clang-darwin-10.0/debug/libhello.dylib
clang-darwin.compile.c bin/clang-darwin-10.0/debug/hello.o
clang-darwin.link bin/clang-darwin-10.0/debug/hello
...updated 7 targets...
